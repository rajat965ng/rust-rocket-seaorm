//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.11

use rocket::serde::{Deserialize, Serialize};
use sea_orm::ActiveValue::Set;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq,Serialize)]
#[serde(crate = "rocket::serde")]
#[sea_orm(table_name = "post")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub title: String,
    pub text: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}


impl ActiveModelBehavior for ActiveModel {}

#[derive(Deserialize)]
#[serde(crate = "rocket::serde")]
pub struct NewPost {
    pub title: String,
    pub text: String,
}

impl NewPost {
   pub fn into_entity(self) -> ActiveModel {
        ActiveModel {
            title: Set(self.title.to_owned()),
            text: Set(self.text.to_owned()),
            ..Default::default()
        }
    }
}